version: "3.9"

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: finance
      POSTGRES_PASSWORD: financepass
      POSTGRES_DB: finance_db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U finance -d finance_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://finance:financepass@db:5432/finance_db
      - FLASK_ENV=development
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./backend:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Data Worker Service
  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://finance:financepass@db:5432/finance_db
      - WORKER_INTERVAL=300  # 5 minutes
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./worker:/app

  # Dashboard Service
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    environment:
      - BACKEND_URL=http://backend:5000
    depends_on:
      - backend
    restart: unless-stopped
    volumes:
      - ./dashboard:/app

  # Optional: Redis for caching and queuing
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  db_data:
  redis_data:

networks:
  default:
    name: finance-network